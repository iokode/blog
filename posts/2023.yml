- Slug: "consideraciones-publicar-nuget"
  Number: 51
  Resume: |
    Hace unos días [afirmaba Elisa en Twitter que las pruebas técnicas deberían de pagarse por ser trabajo](https://twitter.com/ElisaEFS/status/1676560981806268417).
    A esta afirmación respondió Javier exponiendo su experiencia y opinión haciendo pruebas técnicas y bueno, pues yo he querido meterme también en el meollo exponiendo
    tanto mi experiencia como opinión. Sin embargo, dado que esta da para bastante más que un tweet, pues he decidido escribirla aquí.

- Slug: "consideraciones-publicar-nuget"
  Number: 50
  Resume: |
    No hace mucho escribí sobre [como automatizar la publicación de paquetes NuGet](https://iokode.blog/post/2022/versionado-automatico-de-paquetes-nuget-con-un-sistema-ci-cd).
    Escribí esa entrada basándome en mi experiencia utilizando un feed privado de paquetes para un proyecto en VADAVO, pero ahora he obtenido algo de experiencia publicando
    paquetes NuGet de [OpinionatedFramework](https://github.com/iokode/OpinionatedFramework).

- Slug: "compartir-fichero-codigo-varios-proyectos-sin-referencias"
  Number: 49
  Resume: |
    En esta entrada exploramos como se puede compartir el mismo fichero de código fuente C# entre
    varios proyectos sin necesidad de hacer referencias.

- Slug: "lanzado-opinionated-framework-ensure-api"
  Number: 48
  Resume: |
    OpinionatedFramework aún tiene un camino por recorrer antes de lanzar su primera versión completa,
    sin embargo como Ensure está desacoplado al mismo, he podido lanzar este API de validaciones antes
    de que el resto del framework esté listo.

- Slug: "ia-escribir-blog"
  Number: 47
  Resume: |
    A finales del año pasado [escribí sobre cómo usé ChatGPT para crear una extensión de Asciidoctor](https://iokode.blog/post/2022/la-inteligencia-artificial-en-el-ambito-de-la-programacion).
    En aquella entrada me centré en cómo esta herramienta puede ayudar a los programadores a escribir software de
    manera más eficiente. Desde entonces, la he estado utilizando como [copiloto](https://github.com/features/preview/copilot-x)
    para el desarrollo de casi cualquier cosa.

    Hasta entonces no la había llegado a utilizar para escribir entradas del blog (aunque sí [para que las corrigiese](https://twitter.com/Montyclt/status/1647710975238238208))
    porque no me gustaba el resultado y me costaba mucho lograr que escribiera lo que yo quería, sin embargo,
    he de confesar que [la entrada anterior, en la que hablo del avance de OpinionatedFramework](https://iokode.blog/post/2023/opinionated-framework-comandos)
    ha sido escrita en gran parte por ChatGPT. Yo simplemente me he limitado a hacer pequeñas correcciones y ampliar ligeramente la información.

- Slug: "opinionated-framework-comandos"
  Number: 46
  Resume: |
    Continuamos los las novedades de OpinionatedFramework. En esta
    entrada voy a hablar sobre cómo se manejan los comandos. Los
    comandos son una parte central del framework, proporcionando una
    manera clara y coherente de encapsular los casos de uso de tu aplicación.

- Slug: "opinionated-framework-contenedor-de-dependencias-estandar"
  Number: 45
  Resume: |
    Esta entrada es un diario de desarrollo sobre los últimos cambios realizados en
    [OpinionatedFramework](https://iokode.blog/post/2023/arquitectura-limpia-opinionada).

- Slug: "debate-como-serializar-correctamente-las-entidades"
  Number: 44
  Resume: |
    En esta entrada, más que exponer algo sobre mi experiencia, me gustaría abrir un debate sobre la forma correcta
    de serializar tus entidades –o cualquier objeto o estructura– para poder ser reconstruido en un futuro, incluso
    durante la ejecución otra instancia de la aplicación.

- Slug: "semantic-versioning"
  Number: 43
  Resume: |
    Sumergirse en el mundo del versionado semántico puede ahorrar tiempo y frustración a la hora de trabajar con
    paquetes y dependencias en tus proyectos. Conocer cómo asignar e incrementar correctamente los números de
    versión es fundamental para mantener la compatibilidad y evitar problemas con las actualizaciones.

    Descubre en este post la relevancia del versionado semántico, sus reglas básicas y cómo aplicarlo en tus paquetes
    NuGet. Asegura la estabilidad de tus proyectos y facilita la actualización de tus dependencias sin sorpresas indeseadas.

- Slug: "las-aplicaciones-web-son-una-chapuza"
  Number: 42
  Resume: |
    Cualquiera diría que con este título vivo cargado de odio, pero nada más lejos de la realidad.
    Hace un tiempo [dije en un comentario](https://github.com/iokode/blog/discussions/11#discussioncomment-2624310) que,
    en mi opinión, las aplicaciones web es una chapuza que se nos ha ido de las manos y hoy vengo a hablar sobre ello.
    
    Escribo esta entrada porque me gusta mucho mi trabajo, me gusta el software y me gustaría que ciertas cosas hubiesen
    evolucionado de forma distinta a la que lo han hecho.

- Slug: "software-open-source-funciona-egoismo"
  Number: 41
  Resume: |
    Aunque la colaboración en proyectos de software open-source puede parecer motivada por razones desinteresadas,
    lo cierto es que el egoísmo es una fuerza impulsora importante detrás de ella.

- Slug: "comunicacion-ux"
  Number: 40
  Resume: |
    Una aplicación puede tener una UI impecable, con elementos bien utilizados, correctamente alineados, etc.
    y luego mostrar un texto deficiente en un cuadro de diálogo, haciendo que la UX pueda ser un infierno.
    
    En esta entrada voy a reflexionar un poco sobre ello.

- Slug: "dejemos-de-usar-sms-para-2fa"
  Number: 39
  Resume: |
    Twitter ha anunciado que va a dejar de ofrecer 2FA a través de SMS para usuarios que no paguen la
    suscripción Blue. Creo que esta puede ser una buena oportunidad para que la industria deje de usar
    SMS para ello.

- Slug: "opinionated-framework-contratos"
  Number: 38
  Resume: |
    Los contratos son una serie de interfaces en el core de OpinionatedFramework que pueden ser localizadas
    desde el propio Service Locator estático de OpinionatedFramework y están pensados para optimizar el
    desarrollo de aplicaciones.

- Slug: "opinionated-framework-resolviendo-servicios"
  Number: 37
  Resume: |
    Toca hablar de como en OpinionatedFramework se registrar y resuelven servicios, algo importantisimo
    ya que todos los contratos que el propio framework trae consigo mismo son servicios registrados y las
    fachadas son clases que tienen que resolver estos servicios.

    Pero antes de ello, vamos a hablar de distintas formas de resolver servicios.

- Slug: "opinionated-framework-validaciones"
  Number: 36
  Resume: |
    La [validación de precondiciones e invaraintes](https://blog.koalite.com/2014/01/diseno-por-contrato/)
    es un requisito básico en el diseño de cualquier clase o estructura.

    Existen varios paquetes en NuGet para realizar esta validación de forma sencilla, pero prácticamente
    todos pecan del mismo problema: **no permiten personalizar el tipo de excepción que se lanzará cuando
    la validación no se cumple**.

    OpinionatedFramework incluye una librería de validación que refleja lo que para mi es el API perfecta
    para validaciones.
    
- Slug: "arquitectura-limpia-opinionada"
  Number: 35
  Resume: |
    Hasta ahora hemos hablado de las opiniones de un framework, pero estas suelen ser bypasseadas cuando
    se aplica [arquitectura limpia](https://www.amazon.es/dp/8441539901). Poco importa que tu framework
    incluya un contrato para el envío de notificaciones si tu capa aplicación no depende de él y por lo
    tanto no lo puede utilizar directamente. Poco importa la forma en la que el framework valide los datos
    de entrada si tu capa de aplicación va a hacerlo de otra forma diferente.
    
- Slug: "este-framework-tiene-opinion"
  Number: 34
  Resume: |
    Hace unos días [pregunté en Twitter](https://twitter.com/montyclt/status/1610012234087817217) si el
    framework [Laravel](https://laravel.com/) era un framework opinionado. Quería saber primero, que
    se entiende por un framework opinionado y segundo, si esto es bueno o no.

    Aunque la pregunta la hice usando Laravel de ejemplo, ya que tiene fama de ser un framework opinionado
    a raíz de los servicios que ofrece y los patrones que promueve, todo el contenido de esta entrada se
    podría aplicar a cualquier otro framework.

    El hilo dio debate y sacaron a la luz algunos argumentos interesantes sobre lo que es un framework opinionado.
